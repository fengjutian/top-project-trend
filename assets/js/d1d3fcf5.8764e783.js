"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[4167],{69516:r=>{r.exports=JSON.parse('{"blogPosts":[{"id":"code1","metadata":{"permalink":"/top-project-trend/code/code1","editUrl":"https://github.com/fengjutian/top-project-trend/tree/main/code/2025-08-12-blog.md","source":"@site/code/2025-08-12-blog.md","title":"js\u65e5\u5fd7","description":"js\u65e5\u5fd7","date":"2025-08-12T00:00:00.000Z","formattedDate":"August 12, 2025","tags":[],"readingTime":1.885,"hasTruncateMarker":false,"authors":[{"name":"fengjutian","title":"\u54c8\u54c8\u54c8\u54c8\u54c8\u54c8\ud83d\ude04","url":"https://github.com/fengjutian","page":true,"socials":{"x":"","linkedin":"","github":"fengjutian","newsletter":"https://github.com/fengjutian"},"imageURL":"https://avatars.githubusercontent.com/u/10450635?v=4","key":"fengjutian"}],"frontMatter":{"slug":"code1","title":"js\u65e5\u5fd7","authors":"fengjutian","tags":[]}},"content":"### js\u65e5\u5fd7\\r\\n\\r\\n```javascript\\r\\ntype LoggerConfigType = {\\r\\n  // \u547d\u540d\u7a7a\u95f4\\r\\n  namespace?: string\\r\\n}\\r\\n\\r\\n/**\\r\\n * \u62e6\u622a\u5668\u51fd\u6570\u7c7b\u578b\\r\\n */\\r\\ntype InterceptorFuncType = (config: LoggerConfigType) => void\\r\\n\\r\\nconst enum LogLevel {\\r\\n  Log, // \u666e\u901a\u65e5\u5fd7\\r\\n  Warning, // \u8b66\u544a\u65e5\u5fd7\\r\\n  Error, // \u9519\u8bef\u65e5\u5fd7\\r\\n}\\r\\n\\r\\nconst __DEV__ = import.meta.env.MODE\\r\\nconst Styles = [\'color: green;\', \'color: orange;\', \'color: red;\']\\r\\nconst Methods = [\'info\', \'warn\', \'error\'] as const\\r\\n\\r\\nclass Logger {\\r\\n  /** \u547d\u540d\u7a7a\u95f4\uff08scope\uff09\uff0c\u7528\u4e8e\u533a\u5206\u6240\u5728\u6267\u884c\u6587\u4ef6 */\\r\\n  private beforeFuns: Array<InterceptorFuncType> = []\\r\\n  private afterFuns: Array<InterceptorFuncType> = []\\r\\n  private config: LoggerConfigType = {}\\r\\n\\r\\n  constructor(namespace = \'unknown\') {\\r\\n    this.config.namespace = `[${namespace}]`\\r\\n  }\\r\\n  /**\\r\\n   * \u521b\u5efa\u65b0\u7684 Logger \u5b9e\u4f8b\\r\\n   * \\r\\n   * @param namespace \u547d\u540d\u7a7a\u95f4\\r\\n   * @returns Logger\\r\\n   */\\r\\n  public create(namespace = \'unknown\') {\\r\\n    return new Logger(namespace);\\r\\n  }\\r\\n\\r\\n  private _log(level: LogLevel, args: unknown[]) {\\r\\n    if (__DEV__ !== \'development\') return\\r\\n    this.beforeFuns.forEach(func => func(this.config))\\r\\n    console[Methods[level]](`%c${this.config.namespace}`, Styles[level], ...args)\\r\\n  }\\r\\n\\r\\n  private addInterceptor(func: InterceptorFuncType, isBefore = true) {\\r\\n    if(typeof func !== \'function\'){\\r\\n      return this.error(\'\u62e6\u622a\u5668\u51fd\u6570\u4e0d\u7b26\u5408\u89c4\u8303\')\\r\\n    }\\r\\n\\r\\n    if(isBefore){\\r\\n      this.beforeFuns.push(func)\\r\\n    }\\r\\n\\r\\n    this.afterFuns.push(func)\\r\\n    return this\\r\\n  }\\r\\n\\r\\n  // \u65e5\u5fd7\u6253\u5370\u4e4b\u524d\u7684\u62e6\u622a\u5668\u53c2\u6570\\r\\n  public addBeforeFunc(func: InterceptorFuncType) {\\r\\n    this.addInterceptor(func)\\r\\n    return this\\r\\n  }\\r\\n\\r\\n  // \u65e5\u5fd7\u6253\u5370\u4e4b\u540e\u7684\u62e6\u622a\u51fd\u6570\\r\\n  public addAfterFunc(func: InterceptorFuncType) {\\r\\n    this.addInterceptor(func, false)\\r\\n    return this\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * \u6253\u5370\u8f93\u51fa\u4fe1\u606f \ud83d\udc1b\\r\\n   *\\r\\n   * @param args \u4efb\u610f\u53c2\u6570\\r\\n   */\\r\\n  public info(...args: unknown[]) {\\r\\n    this._log(LogLevel.Log, args)\\r\\n    return this\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * \u6253\u5370\u8f93\u51fa\u8b66\u544a\u4fe1\u606f \u2755\\r\\n   *\\r\\n   * @param args \u4efb\u610f\u53c2\u6570\\r\\n   */\\r\\n  public warn(...args: unknown[]) {\\r\\n    this._log(LogLevel.Warning, args)\\r\\n    return this\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * \u6253\u5370\u8f93\u51fa\u9519\u8bef\u4fe1\u606f \u274c\\r\\n   *\\r\\n   * @param args \u4efb\u610f\u53c2\u6570\\r\\n   */\\r\\n  public error(...args: unknown[]) {\\r\\n    this._log(LogLevel.Error, args)\\r\\n    return this\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * \u8bbe\u7f6e\u547d\u540d\u7a7a\u95f4\uff08\u65e5\u5fd7\u524d\u7f00\uff09\\r\\n   * @param namespace\\r\\n   */\\r\\n  public setNamespace(namespace = \'\') {\\r\\n    this.config.namespace = `[${namespace}]`\\r\\n    return this\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * \u8fdc\u7a0b\u4e0a\u62a5\\r\\n   */\\r\\n  public reportLog() {\\r\\n    this.info() // \u7528\u4e8e\u5728\u672c\u5730\u8f93\u51fa\\r\\n  }\\r\\n  public reportEvent() {\\r\\n    this.info()\\r\\n  }\\r\\n  public reportException() {\\r\\n    this.error()\\r\\n  }\\r\\n}\\r\\n\\r\\nexport default new Logger()\\r\\n```"}]}')}}]);